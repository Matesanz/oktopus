[tool.poetry]
name = "oktopus"
version = "0.10.0"
description = "Graph-GPT your own data with small and efficient llm models!"
authors = ["Move38 <matesanz.cuadrado@gmail.com>"]
packages = [{include = "oktopus"}]

[tool.poetry.dependencies]
python = "^3.10,<3.13"
fastapi = "~0.104"
pydantic = "~2.4"
pydantic-settings = "~2.0"
uvicorn = {version = "~0.23", extras = ["standard"]}
sentence-transformers = "^2.2.2"
qdrant-client = "^1.6.4"
torch = {version = "2.0", source = "torch_cpu"}

[tool.poetry.group.dev.dependencies]
black = "^22.8.0"
isort = "^5.10.1"
pydocstyle = "^6.1.1"
pylint = "^2.17.5"
pytest = "^7.1.3"
jupyter = "^1.0.0"
python-semantic-release = "^8.0.4"
pre-commit = "^2.20.0"
ruff = "^0.1.5"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.3.1"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}
mkdocstrings-python = "^0.7.1"
mkdocs-material = "^8.4.2"
mkdocs-jupyter = "^0.22.0"
pymdown-extensions = "^9.10"
mkdocs-gen-files = "^0.4.0"
mkdocs-section-index = "^0.3.5"
mkdocs-awesome-pages-plugin = "^2.8.0"
griffe = "^0.30.0"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[[tool.poetry.source]]
name = "torch_cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "supplemental"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version",]
version_variable = ["oktopus/__init__.py:__version__",]
commit_subject = "🔖 v{version}"
tag_format = "{version}"
commit_parser = "emoji"
ignore_token_for_push = true
upload_to_vcs_release = false

[tool.semantic_release.commit_parser_options]
major_tags = [
    "💥"]  # breaking change
minor_tags = [
    "✨",  # feature
    "🚑",  # hotfix
    "🎉",  # begin project
    "🧪"]  # test
patch_tags = [
    "🐛",  # bugfix,
    "🩹",  # simple fix
    "🔒",  # security
    "📝",  # docs
    "⚡️",  # performance
    "👷"]  # ci/cd

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false

[tool.semantic_release.branches.release]
match = "^(release).*$"
prerelease = true
prerelease_token = "rc"

[tool.semantic_release.branches.develop]
match = "(dev|develop)"
prerelease = true
prerelease_token = "alpha"

[tool.semantic_release.branches.hotfix]
match = "^(hotfix).*$"
prerelease = true
prerelease_token = "hotfix"

[tool.black]
line_length = 100
max-complexity = 10

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
extend_skip_glob = ["docs/*", "notebooks/*"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.pydocstyle]
convention = "google"
add-select = ["D400", "D401", "D411"]

[tool.ruff.lint.isort]
force-sort-within-sections = true


[tool.pylint]
    [tool.pylint.main]
    load-plugins=[
        "pylint.extensions.check_elif",
        "pylint.extensions.bad_builtin",
        "pylint.extensions.docparams",
        "pylint.extensions.for_any_all",
        "pylint.extensions.set_membership",
        "pylint.extensions.code_style",
        "pylint.extensions.overlapping_exceptions",
        "pylint.extensions.typing",
        "pylint.extensions.redefined_variable_type",
        "pylint.extensions.comparison_placement"]

    [tool.pylint.messages_control]
    disable = [
        "too-few-public-methods",
        "too-many-arguments",
        "consider-using-assignment-expr"]

    [tool.pylint.TYPECHECK]
    # avoid no-member errors for cv2
    generated-members = 'cv2.*'

    [tool.pylint.BASIC]
    good-names = ["x", "y", "z", "x1", "y1", "z1", "x2", "y2", "z2", "xs", "ys", "zs"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
